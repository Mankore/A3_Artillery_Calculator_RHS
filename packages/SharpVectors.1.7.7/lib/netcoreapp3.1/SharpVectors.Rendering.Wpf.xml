<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpVectors.Rendering.Wpf</name>
    </assembly>
    <members>
        <member name="T:SharpVectors.Renderers.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SharpVectors.Renderers.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SharpVectors.Renderers.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.IsBoldSimulated">
            <summary>
            Gets a value that determines whether to simulate a bold weight for the glyphs represented by the typeface.
            </summary>
            <value>true if bold simulation is used for glyphs; otherwise, false.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.IsObliqueSimulated">
            <summary>
            Gets a value that determines whether to simulate an italic style for the glyphs represented by the typeface.
            </summary>
            <value>true if italic simulation is used for glyphs; otherwise, false.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.StrikethroughPosition">
            <summary>
            Gets a value that indicates the distance from the baseline to the strikethrough for the typeface.
            </summary>
            <value>A <see cref="T:System.Double"/> that indicates the strikethrough position, measured from the baseline and expressed 
            as a fraction of the font em size.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.StrikethroughThickness">
            <summary>
            Gets a value that indicates the thickness of the strikethrough relative to the font em size.
            </summary>
            <value>A <see cref="T:System.Double"/> that indicates the strikethrough thickness, expressed as a fraction 
            of the font em size.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.UnderlinePosition">
            <summary>
            Gets a value that indicates the distance of the underline from the baseline for the typeface.
            </summary>
            <value>A <see cref="T:System.Double"/> that indicates the underline position, measured from the baseline 
            and expressed as a fraction of the font em size.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.UnderlineThickness">
            <summary>
            Gets a value that indicates the thickness of the underline relative to the font em size for the typeface.
            </summary>
            <value>A <see cref="T:System.Double"/> that indicates the underline thickness, expressed as a fraction 
            of the font em size.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.OverlinePosition">
            <summary>
            Gets a value that indicates the distance of the overline from the baseline for the typeface.
            </summary>
            <value>A <see cref="T:System.Double"/> that indicates the overline position, measured from the baseline 
            and expressed as a fraction of the font em size.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.OverlineThickness">
            <summary>
            Gets a value that indicates the thickness of the overline relative to the font em size for the typeface.
            </summary>
            <value>A <see cref="T:System.Double"/> that indicates the overline thickness, expressed as a fraction 
            of the font em size.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.XHeight">
            <summary>
            Gets the distance from the baseline to the top of an English lowercase letter for a typeface. 
            The distance excludes ascenders.
            </summary>
            <value>
            A <see cref="T:System.Double"/> that indicates the distance from the baseline to the top of an
            English lowercase letter (excluding ascenders), expressed as a fraction of the font em size.
            </value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.BidiLevel">
            <summary>
            Gets or sets the bidirectional nesting level of Glyphs.
            </summary>
            <value>An <see cref="T:System.Int32"/> value that represents the bidirectional nesting level.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.DeviceFontName">
            <summary>
            Gets or sets the specific device font for which the Glyphs object has been optimized.
            </summary>
            <value>A <see cref="T:System.String"/> value that represents the name of the device font.</value>
        </member>
        <member name="M:SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.ParseGlyphRunProperties">
            <SecurityNote>
             Critical as it accesses the base Uri
             TreatAsSafe as it only uses this to load glyphtypefaces, and this information is not disclosed.
            </SecurityNote>
        </member>
        <member name="M:SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.ReadGlyphIndex(System.String,System.Boolean@,System.Int32@,System.Int32@,System.UInt16@)">
            <summary>
            Read GlyphIndex specification - glyph index value with an optional glyph cluster prefix.
            </summary>
            <param name="valueSpec"></param>
            <param name="inCluster"></param>
            <param name="glyphClusterSize"></param>
            <param name="characterClusterSize"></param>
            <param name="glyphIndex"></param>
            <returns>true if glyph index is present, false if glyph index is not present.</returns>
        </member>
        <member name="M:SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.SetClusterMapEntry(System.UInt16[],System.Int32,System.UInt16)">
            <summary>
            Performs validation against cluster map size and throws a well defined exception.
            </summary>
        </member>
        <member name="T:SharpVectors.Renderers.Texts.WpfPathTextBuilder">
            <summary>
            This is the text-path builder, which handles the rendering using the text-builder objects, 
            <see cref="T:SharpVectors.Renderers.Texts.WpfTextBuilder"/>, to convert the text characters to geometric representations.
            </summary>
        </member>
        <member name="T:SharpVectors.Renderers.Texts.WpfPathTextRun">
            <summary>
            This defines the information required to render a text-run on a path.
            </summary>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfSvgTextBuilder.IsBoldSimulated">
            <summary>
            Gets a value that determines whether to simulate a bold weight for the glyphs represented by the typeface.
            </summary>
            <value>true if bold simulation is used for glyphs; otherwise, false.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfSvgTextBuilder.IsObliqueSimulated">
            <summary>
            Gets a value that determines whether to simulate an italic style for the glyphs represented by the typeface.
            </summary>
            <value>true if italic simulation is used for glyphs; otherwise, false.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfSvgTextBuilder.StrikethroughPosition">
            <summary>
            Gets a value that indicates the distance from the baseline to the strikethrough for the typeface.
            </summary>
            <value>A <see cref="T:System.Double"/> that indicates the strikethrough position, measured from the baseline and expressed 
            as a fraction of the font em size.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfSvgTextBuilder.StrikethroughThickness">
            <summary>
            Gets a value that indicates the thickness of the strikethrough relative to the font em size.
            </summary>
            <value>A <see cref="T:System.Double"/> that indicates the strikethrough thickness, expressed as a fraction 
            of the font em size.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfSvgTextBuilder.UnderlinePosition">
            <summary>
            Gets a value that indicates the distance of the underline from the baseline for the typeface.
            </summary>
            <value>A <see cref="T:System.Double"/> that indicates the underline position, measured from the baseline 
            and expressed as a fraction of the font em size.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfSvgTextBuilder.UnderlineThickness">
            <summary>
            Gets a value that indicates the thickness of the underline relative to the font em size for the typeface.
            </summary>
            <value>A <see cref="T:System.Double"/> that indicates the underline thickness, expressed as a fraction 
            of the font em size.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfSvgTextBuilder.OverlinePosition">
            <summary>
            Gets a value that indicates the distance of the overline from the baseline for the typeface.
            </summary>
            <value>A <see cref="T:System.Single"/> that indicates the overline position, measured from the baseline 
            and expressed as a fraction of the font em size.</value>
            <remarks>attribute name = "overline-position" {number}</remarks>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfSvgTextBuilder.OverlineThickness">
            <summary>
            Gets a value that indicates the thickness of the overline relative to the font em size for the typeface.
            </summary>
            <value>A <see cref="T:System.Single"/> that indicates the overline thickness, expressed as a fraction 
            of the font em size.</value>
            <remarks>attribute name = "overline-thickness" {number}</remarks>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfSvgTextBuilder.XHeight">
            <summary>
            Gets the distance from the baseline to the top of an English lowercase letter for a typeface. 
            The distance excludes ascenders.
            </summary>
            <value>
            A <see cref="T:System.Double"/> that indicates the distance from the baseline to the top of an
            English lowercase letter (excluding ascenders), expressed as a fraction of the font em size.
            </value>
        </member>
        <member name="M:SharpVectors.Renderers.Texts.WpfSvgTextBuilder.SvgAttributedTextIterator.IsArabicCharTransparent(System.Char)">
            <summary>
            Returns true if the char is transparent.
            </summary>
            <param name="c"> The character to test. </param>
            <returns> True if the character is transparent, false otherwise. </returns>
        </member>
        <member name="M:SharpVectors.Renderers.Texts.WpfSvgTextBuilder.SvgAttributedTextIterator.IsArabicCharShapesRight(System.Char)">
            <summary>
            Returns true if the character shapes to the right. Note that duel
            shaping characters also shape to the right and so will return true.
            </summary>
            <param name="c"> The character to test. </param>
            <returns> True if the character shapes to the right, false otherwise. </returns>
        </member>
        <member name="M:SharpVectors.Renderers.Texts.WpfSvgTextBuilder.SvgAttributedTextIterator.IsArabicCharShapesDuel(System.Char)">
            <summary>
            Returns true if character has duel shaping.
            </summary>
            <param name="c"> The character to test. </param>
            <returns> True if the character is duel shaping, false otherwise. </returns>
        </member>
        <member name="M:SharpVectors.Renderers.Texts.WpfSvgTextBuilder.SvgAttributedTextIterator.IsArabicCharShapesLeft(System.Char)">
            <summary>
            Returns true if character shapes to the left. Note that duel
            shaping characters also shape to the left and so will return true.
            </summary>
            <param name="c"> The character to test. </param>
            <returns> True if the character shapes to the left, false otherwise. </returns>
        </member>
        <member name="M:SharpVectors.Renderers.Texts.WpfSvgTextBuilder.SvgAttributedTextIterator.IsArabicCharShaped(System.Char)">
            <summary>
            Returns true if character is shaped.
            </summary>
            <param name="c"> The character to test. </param>
            <returns> True if the character is shaped, false otherwise. </returns>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfTextBuilder.PixelsPerInchX">
            <summary>Gets the DPI along X axis.</summary>
            <value>The DPI along the X axis.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfTextBuilder.PixelsPerInchY">
            <summary>Gets the DPI along Y axis.</summary>
            <value>The DPI along the Y axis.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfTextBuilder.DpiScaleX">
            <summary>Gets the DPI scale on the X axis.</summary>
            <value>The DPI scale for the X axis.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfTextBuilder.DpiScaleY">
            <summary>Gets the DPI scale on the Yaxis.</summary>
            <value>The DPI scale for the Y axis.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfTextBuilder.PixelsPerDip">
            <summary>Get or sets the PixelsPerDip at which the text should be rendered.</summary>
            <value>The current PixelsPerDip value.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfTextBuilder.IsBoldSimulated">
            <summary>
            Gets a value that determines whether to simulate a bold weight for the glyphs represented by the typeface.
            </summary>
            <value>true if bold simulation is used for glyphs; otherwise, false.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfTextBuilder.IsObliqueSimulated">
            <summary>
            Gets a value that determines whether to simulate an italic style for the glyphs represented by the typeface.
            </summary>
            <value>true if italic simulation is used for glyphs; otherwise, false.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfTextBuilder.StrikethroughPosition">
            <summary>
            Gets a value that indicates the distance from the baseline to the strikethrough for the typeface.
            </summary>
            <value>A <see cref="T:System.Double"/> that indicates the strikethrough position, measured from the baseline and expressed 
            as a fraction of the font em size.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfTextBuilder.StrikethroughThickness">
            <summary>
            Gets a value that indicates the thickness of the strikethrough relative to the font em size.
            </summary>
            <value>A <see cref="T:System.Double"/> that indicates the strikethrough thickness, expressed as a fraction 
            of the font em size.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfTextBuilder.UnderlinePosition">
            <summary>
            Gets a value that indicates the distance of the underline from the baseline for the typeface.
            </summary>
            <value>A <see cref="T:System.Double"/> that indicates the underline position, measured from the baseline 
            and expressed as a fraction of the font em size.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfTextBuilder.UnderlineThickness">
            <summary>
            Gets a value that indicates the thickness of the underline relative to the font em size for the typeface.
            </summary>
            <value>A <see cref="T:System.Double"/> that indicates the underline thickness, expressed as a fraction 
            of the font em size.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfTextBuilder.OverlinePosition">
            <summary>
            Gets a value that indicates the distance of the overline from the baseline for the typeface.
            </summary>
            <value>A <see cref="T:System.Double"/> that indicates the overline position, measured from the baseline 
            and expressed as a fraction of the font em size.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfTextBuilder.OverlineThickness">
            <summary>
            Gets a value that indicates the thickness of the overline relative to the font em size for the typeface.
            </summary>
            <value>A <see cref="T:System.Double"/> that indicates the overline thickness, expressed as a fraction 
            of the font em size.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfTextBuilder.XHeight">
            <summary>
            Gets the distance from the baseline to the top of an English lowercase letter for a typeface. 
            The distance excludes ascenders.
            </summary>
            <value>
            A <see cref="T:System.Double"/> that indicates the distance from the baseline to the top of an
            English lowercase letter (excluding ascenders), expressed as a fraction of the font em size.
            </value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfTextBuilder.Baseline">
            <summary>
            Gets the distance from the top of the first line to the baseline of the first
            line of a <see cref="T:SharpVectors.Renderers.Texts.WpfTextBuilder"/> object.
            </summary>
            <value>
            The distance from the top of the first line to the baseline of the first line,
            provided in device-independent units (1/96th inch per unit).
            </value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfTextBuilder.FlowDirection">
            <summary>
            Gets or sets the System.Windows.FlowDirection of a <see cref="T:SharpVectors.Renderers.Texts.WpfTextBuilder"/> object.
            </summary>
            <value>
            The System.Windows.FlowDirection of the formatted text.
            </value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfTextBuilder.TextAlignment">
            <summary>
            Gets or sets the alignment of text within a <see cref="T:SharpVectors.Renderers.Texts.WpfTextBuilder"/> object.
            </summary>
            <value>
            One of the System.Windows.TextAlignment values that specifies the alignment of
            text within a <see cref="T:SharpVectors.Renderers.Texts.WpfTextBuilder"/> object.
            </value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfTextBuilder.Trimming">
            <summary>
            Gets or sets the means by which the omission of text is indicated.
            </summary>
            <value>
            One of the System.Windows.TextTrimming values that specifies how the omission
            of text is indicated. The default is System.Windows.TextTrimming.WordEllipsis.
            </value>
        </member>
        <member name="P:SharpVectors.Renderers.Texts.WpfTextBuilder.TextDecorations">
            <summary>
            Sets the System.Windows.TextDecorationCollection for the entire set of characters
            in the <see cref="T:SharpVectors.Renderers.Texts.WpfTextBuilder"/> object.
            </summary>
            <value name="textDecorations">The System.Windows.TextDecorationCollection to apply to the text.</value>
        </member>
        <member name="M:SharpVectors.Renderers.Texts.WpfTextRenderer.ExtractTextPathGeometry(System.Windows.Media.Geometry)">
            <summary>
            This will extract a <see cref="T:System.Windows.Media.PathGeometry"/> that is nested into GeometryGroup, which
            is normally created by the FormattedText.BuildGeometry() method.
            </summary>
            <param name="sourceGeometry"></param>
            <returns></returns>
        </member>
        <member name="M:SharpVectors.Renderers.Utils.WpfConvert.ToColor(SharpVectors.Dom.Css.ICssColor)">
            <summary>
            A WPF <see cref="T:System.Windows.Media.Color"/> representation of the <c>RgbColor</c>.
            </summary>
        </member>
        <member name="M:SharpVectors.Renderers.Utils.WpfConvert.ToRect(SharpVectors.Dom.Svg.SvgRectF)">
            <summary>
            This converts the specified <see cref="T:System.Windows.Rect"/> structure to a 
            <see cref="T:SharpVectors.Dom.Svg.SvgRectF"/> structure.
            </summary>
            <param name="rect">The <see cref="T:System.Windows.Rect"/> structure to convert.</param>
            <returns>
            The <see cref="T:SharpVectors.Dom.Svg.SvgRectF"/> structure that is converted from the 
            specified <see cref="T:System.Windows.Rect"/> structure.
            </returns>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingContext.Count">
            <summary>
            Gets the number of elements contained in the drawing stack.
            </summary>
            <value>
            The number of elements contained in the drawing stack.
            </value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingContext.PixelsPerInchX">
            <summary>Gets the DPI along X axis.</summary>
            <value>The DPI along the X axis.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingContext.PixelsPerInchY">
            <summary>Gets the DPI along Y axis.</summary>
            <value>The DPI along the Y axis.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingContext.DpiScaleX">
            <summary>Gets the DPI scale on the X axis.</summary>
            <value>The DPI scale for the X axis.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingContext.DpiScaleY">
            <summary>Gets the DPI scale on the Yaxis.</summary>
            <value>The DPI scale for the Y axis.</value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingContext.PixelsPerDip">
            <summary>Get or sets the PixelsPerDip at which the text should be rendered.</summary>
            <value>The current PixelsPerDip value.</value>
        </member>
        <member name="M:SharpVectors.Renderers.Wpf.WpfDrawingContext.Clear">
            <summary>
            Removes all objects from the drawing stack.
            </summary>
        </member>
        <member name="M:SharpVectors.Renderers.Wpf.WpfDrawingContext.Contains(System.Windows.Media.DrawingGroup)">
            <summary>
            Determines whether an element is in the drawing stack.
            </summary>
            <param name="item">The object to locate in the drawing stack. The value can be null for reference types.</param>
            <returns>true if item is found in the drawing stack; otherwise, false.</returns>
        </member>
        <member name="M:SharpVectors.Renderers.Wpf.WpfDrawingContext.CopyTo(System.Windows.Media.DrawingGroup[],System.Int32)">
            <summary>
            Copies the drawing stack to an existing one-dimensional array, starting at the specified array index.
            </summary>
            <param name="array">
            The one-dimensional System.Array that is the destination of the elements
            copied from drawing stack. The array must have zero-based indexing.
            </param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="array"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="arrayIndex"/> is equal to or greater than the length of array.
            <para>-or-</para>
            The number of elements in the source drawing stack is greater than the available 
            space from <paramref name="arrayIndex"/> to the end of the destination array.
            </exception>
        </member>
        <member name="M:SharpVectors.Renderers.Wpf.WpfDrawingContext.Peek">
            <summary>
            Returns the object at the top of the drawing stack without removing it.
            </summary>
            <returns>The object at the top of the drawing stack.</returns>
            <exception cref="T:System.InvalidOperationException">The drawing stack is empty.</exception>
        </member>
        <member name="M:SharpVectors.Renderers.Wpf.WpfDrawingContext.Pop">
            <summary>
            Removes and returns the object at the top of the drawing stack.
            </summary>
            <returns>The object removed from the top of the drawing stack.</returns>
            <exception cref="T:System.InvalidOperationException">The drawing stack is empty.</exception>
        </member>
        <member name="M:SharpVectors.Renderers.Wpf.WpfDrawingContext.Push(System.Windows.Media.DrawingGroup)">
            <summary>
            Inserts an object at the top of the drawing stack.
            </summary>
            <param name="item">The object to push onto the drawing stack. The value can be null for reference types.</param>
        </member>
        <member name="M:SharpVectors.Renderers.Wpf.WpfDrawingContext.ToArray">
            <summary>
            Copies the drawing stack to a new array.
            </summary>
            <returns>A new array containing copies of the elements of the drawing stack.</returns>
        </member>
        <member name="M:SharpVectors.Renderers.Wpf.WpfDrawingContext.TrimExcess">
            <summary>
            Sets the capacity to the actual number of elements in the drawing stack,
            if that number is less than 90 percent of current capacity.
            </summary>
        </member>
        <member name="T:SharpVectors.Renderers.Wpf.WpfDrawingRenderer">
            <summary>
            
            </summary>
            <remarks>
            Rename: WpfRendererSession
            </remarks>
        </member>
        <member name="F:SharpVectors.Renderers.Wpf.WpfDrawingRenderer._svgWindow">
            <summary>
            The renderer's <see cref="T:SharpVectors.Dom.Svg.SvgWindow">SvgWindow</see> object.
            </summary>
        </member>
        <member name="T:SharpVectors.Renderers.Wpf.WpfDrawingSettings">
            <summary>
            This provides the options for the drawing/rendering engine of the WPF.
            </summary>
        </member>
        <member name="M:SharpVectors.Renderers.Wpf.WpfDrawingSettings.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:SharpVectors.Renderers.Wpf.WpfDrawingSettings"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:SharpVectors.Renderers.Wpf.WpfDrawingSettings"/> class
            with the default parameters and settings.
            </summary>
        </member>
        <member name="M:SharpVectors.Renderers.Wpf.WpfDrawingSettings.#ctor(SharpVectors.Renderers.Wpf.WpfDrawingSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpVectors.Renderers.Wpf.WpfDrawingSettings"/> class
            with the specified initial drawing or rendering settings, a copy constructor.
            </summary>
            <param name="settings">
            This specifies the initial options for the rendering or drawing engine.
            </param>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.Item(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.PixelWidth">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.PixelHeight">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.HasPixelSize">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.UserCssFilePath">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.UserAgentCssFilePath">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.CssVariables">
            <summary>
            Gets or sets user-defined CSS custom properties for the rendering.
            </summary>
            <value>A <see cref="T:System.Collections.Generic.IDictionary`2"/> of user-defined styles. This value is
            never <see langword="null"/>.
            </value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.IgnoreRootViewbox">
            <summary>
            Gets or sets a value to indicate turning off viewbox at the root of the drawing.
            </summary>
            <value>
            For image outputs, this will force the original size to be saved.
            <para>
            The default value is <see langword="false"/>.
            </para>
            </value>
            <remarks>
            There are reported cases where are diagrams displayed in Inkscape program, but will not
            show when converted. These are diagrams on the drawing canvas of Inkspace but outside 
            the svg viewbox. 
            <para>
            When converted the drawings are also converted but not displayed due to
            clipping. Setting this property to <see langword="true"/> will clear the clipping region
            on conversion.
            </para>
            </remarks>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.EnsureViewboxSize">
            <summary>
            Gets or sets a value to indicate preserving the original viewbox size when saving images.
            </summary>
            <value>
            For image outputs, this will force the original size to be saved.
            <para>
            The default value is <see langword="false"/>. However, the ImageSvgConverter converted
            sets this to <see langword="true"/> by default.
            </para>
            </value>
            <remarks>
            Setting this to <see langword="true"/> will cause the rendering process to draw a transparent
            box around the output, if a viewbox is defined. This will ensure that the original image
            size is saved.
            </remarks>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.EnsureViewboxPosition">
            <summary>
            Gets or sets a value to indicate applying a translate transform to the viewbox to ensure
            it is visible when rendered.
            </summary>
            <value>
            This determines whether a transformation is applied to the rendered drawing. For drawings
            where the top-left position of the viewbox is off the screen, due to negative values, this
            will ensure the drawing is visible.
            <para>
            The default value is <see langword="true"/>. Set this value to <see langword="false"/> if
            you wish to apply your own transformations to the drawings.
            </para>
            </value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.OptimizePath">
            <summary>
            Gets or sets a value indicating whether the path geometry is 
            optimized using the <see cref="T:System.Windows.Media.StreamGeometry"/>.
            </summary>
            <value>
            This is <see langword="true"/> if the path geometry is optimized
            using the <see cref="T:System.Windows.Media.StreamGeometry"/>; otherwise, it is 
            <see langword="false"/>. The default is <see langword="true"/>.
            </value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.TextAsGeometry">
            <summary>
            Gets or sets a value indicating whether the texts are rendered as
            path geometry.
            </summary>
            <value>
            This is <see langword="true"/> if texts are rendered as path 
            geometries; otherwise, this is <see langword="false"/>. The default
            is <see langword="false"/>.
            </value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.IncludeRuntime">
            <summary>
            Gets or sets a value indicating whether the <c>SharpVectors.Runtime.dll</c>
            classes are used in the generated output.
            </summary>
            <value>
            This is <see langword="true"/> if the <c>SharpVectors.Runtime.dll</c>
            classes and types are used in the generated output; otherwise, it is 
            <see langword="false"/>. The default is <see langword="true"/>.
            </value>
            <remarks>
            The use of the <c>SharpVectors.Runtime.dll</c> prevents the hard-coded
            font path generated by the <see cref="T:System.Windows.Media.FormattedText"/> class, support
            for embedded images etc.
            </remarks>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.CultureInfo">
            <summary>
            Gets or sets the main culture information used for rendering texts.
            </summary>
            <value>
            An instance of the <see cref="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.CultureInfo"/> specifying the main
            culture information for texts. The default is the English culture.
            </value>
            <remarks>
            <para>
            This is the culture information passed to the <see cref="T:System.Windows.Media.FormattedText"/>
            class instance for the text rendering.
            </para>
            <para>
            The library does not currently provide any means of splitting texts
            into its multi-language parts.
            </para>
            </remarks>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.NeutralCultureInfo">
            <summary>
            Gets the neutral language for text rendering.
            </summary>
            <value>
            An instance of the <see cref="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.CultureInfo"/> specifying the neutral
            culture information for texts. The default is the English culture.
            </value>
            <remarks>
            For vertical text rendering, there is a basic text splitting into
            Western and other languages. This culture information is used to
            render the Western language part, and the mains culture information
            for the other languages.
            </remarks>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.DefaultFontName">
            <summary>
            Gets or sets the default font family name, which is used when a text
            node does not specify a font family name.
            </summary>
            <value>
            A string containing the default font family name. The default is
            the <c>Arial Unicode MS</c> font, for its support of Unicode texts.
            This value cannot be <see langword="null"/> or empty.
            </value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.Visitors">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.DefaultFontFamily">
            <summary>
            Gets or sets the globally available default font family.
            </summary>
            <value>
            An instance of the <see cref="T:System.Windows.Media.FontFamily"/> specifying the globally available font family. 
            The default is <c>Arial</c> font (since <c>Arial Unicode MS</c> is no longer shipped by MS).
            family.
            </value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.GenericSerif">
            <summary>
            Gets or set the globally available generic serif font family.
            </summary>
            <value>
            An instance of <see cref="T:System.Windows.Media.FontFamily"/> specifying the generic serif
            font family. The default is <c>Times New Roman</c> font family.
            </value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.GenericSansSerif">
            <summary>
            Gets or set the globally available generic sans serif font family.
            </summary>
            <value>
            An instance of <see cref="T:System.Windows.Media.FontFamily"/> specifying the generic sans 
            serif font family. The default is <c>Tahoma</c> font family.
            </value>
            <remarks>
            The possible font names are <c>Tahoma</c>, <c>Arial</c>, 
            <c>Verdana</c>, <c>Trebuchet</c>, <c>MS Sans Serif</c> and <c>Helvetica</c>.
            </remarks>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.GenericMonospace">
            <summary>
            Gets or set the globally available generic Monospace font family.
            </summary>
            <value>
            An instance of <see cref="T:System.Windows.Media.FontFamily"/> specifying the generic 
            Monospace font family. The default is <c>MS Gothic</c> font family.
            </value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.GenericCursive">
            <summary>
            Gets or set the globally available generic cursive font family.
            </summary>
            <value>
            An instance of <see cref="T:System.Windows.Media.FontFamily"/> specifying the generic 
            cursive font family. The default is <c>Comic Sans MS</c> font family.
            </value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.GenericFantasy">
            <summary>
            Gets or set the globally available generic fantasy font family.
            </summary>
            <value>
            An instance of <see cref="T:System.Windows.Media.FontFamily"/> specifying the generic 
            fantasy font family. The default is <c>Impact</c> font family.
            </value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.FontLocations">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.FontFamilyNames">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.HasFontFamilies">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.FontFamilies">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.InteractiveMode">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfDrawingSettings.DpiScale">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:SharpVectors.Renderers.Wpf.WpfDrawingSettings.AddFontFamilyName(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="mappedName"></param>
            <param name="fontName"></param>
        </member>
        <member name="M:SharpVectors.Renderers.Wpf.WpfDrawingSettings.AddFontLocation(System.String)">
            <summary>
            
            </summary>
            <param name="fontLocation"></param>
        </member>
        <member name="M:SharpVectors.Renderers.Wpf.WpfDrawingSettings.LookupFontFamily(System.String,System.Windows.FontWeight,System.Windows.FontStyle,System.Windows.FontStretch)">
            <summary>
            
            </summary>
            <param name="fontName"></param>
            <returns></returns>
        </member>
        <member name="M:SharpVectors.Renderers.Wpf.WpfDrawingSettings.Clone">
            <overloads>
            This creates a new settings object that is a deep copy of the current 
            instance.
            </overloads>
            <summary>
            This creates a new settings object that is a deep copy of the current 
            instance.
            </summary>
            <returns>
            A new settings object that is a deep copy of this instance.
            </returns>
            <remarks>
            This is deep cloning of the members of this settings object. If you 
            need just a copy, use the copy constructor to create a new instance.
            </remarks>
        </member>
        <member name="M:SharpVectors.Renderers.Wpf.WpfDrawingSettings.System#ICloneable#Clone">
            <summary>
            This creates a new settings object that is a deep copy of the current 
            instance.
            </summary>
            <returns>
            A new settings object that is a deep copy of this instance.
            </returns>
            <remarks>
            This is deep cloning of the members of this style object. If you need just a copy,
            use the copy constructor to create a new instance.
            </remarks>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfHitTestResult.Point">
            <summary>
            The point value to hit test against.
            </summary>
        </member>
        <member name="P:SharpVectors.Renderers.Wpf.WpfHitTestResult.Element">
            <summary>
            Gets the SVG object that was hit.
            </summary>
        </member>
        <member name="T:SharpVectors.Renderers.Wpf.WpfHitTextLevel">
            <summary>
            Hit-test options for text elements.
            </summary>
        </member>
        <member name="F:SharpVectors.Renderers.Wpf.WpfHitTextLevel.Bounds">
            <summary>
            Test only the bounds of the rendered text.
            </summary>
        </member>
        <member name="F:SharpVectors.Renderers.Wpf.WpfHitTextLevel.Glyphs">
            <summary>
            Test the bounds and glyph geometris in the rendered text.
            </summary>
        </member>
        <member name="M:SharpVectors.Renderers.Wpf.WpfRendering.CreateByUri(SharpVectors.Dom.Svg.SvgDocument,System.String,System.String)">
            <summary>
            Generates a new <see cref="T:SharpVectors.Renderers.Wpf.WpfRendering">RenderingNode</see> that
            corresponds to the given Uri.
            </summary>
            <param name="baseUri">
            The base Uri.
            </param>
            <param name="url">
            The url.
            </param>
            <returns>
            The generated <see cref="T:SharpVectors.Renderers.Wpf.WpfRendering">RenderingNode</see> that
            corresponds to the given Uri.
            </returns>
        </member>
        <member name="T:SharpVectors.Renderers.Wpf.WpfRenderingBase">
            <summary>      
            Defines the interface required for a rendering node to interact with the renderer and the SVG DOM
            </summary>
            <remarks>
            Rename: WpfElementRenderer, WpfRenderingObject
            </remarks>
        </member>
        <member name="T:SharpVectors.Renderers.Wpf.WpfRenderingHelper">
            <summary>
            
            </summary>
            <remarks>
            Rename: WpfDocumentRenderer
            </remarks>
        </member>
    </members>
</doc>
